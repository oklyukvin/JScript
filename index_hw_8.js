//1. Для практикума из занятия 7 продумать, где можно применить замыкания.

Если я правильно понял, то в рамках игры "Змейка" можно использовать замыкание таким образом, что функция изменение направления движения змейки, которая обратывает пользовательские нажатия кнопок направления, в себе содержит:
    1. функцию проверки на препятствие. Т.о. можно в функции передвижения змейки сослаться на эту функцию и она выдаст результат проверки возможности дальнейшего передвижения;
    2. функцию проверку на пересечение змейкой еды. Т.о. можно в функции создания корма сослаться на эту функцию и она выдаст результат. Если пересечения не было, корм не создается, если было запускается таймер.

//2. Не выполняя кода, ответить, что выведет браузер и почему:

//Пример №1
if (!("a" in window)) {//дословно мы проверям условие, что строка "а" не является объектом "window";
var a = 1;// создаем локальную переменную "а" и присваивается ей значение "1"
}
alert(a);//пытаемся вывести переменную "а" и т.к. условие ложное, то логическое НЕ выдает значение "true" и выводится "1".


//Пример №2
var b = function a(x) {//присваиваем переменной "b" функцию. Функция называется "a" и на вход принимает произвольную перменную "х".
x && a(--x); //дословно: переменная "x" или "a" от префиксной формы инкримента "х".
};
alert(a);// кажется что это какая чушь и по сути для перменно "x", которую на вход ожижает функция "a" не задано корректного значения, значит будет ошибка.


//Пример №3
function a(x) { //создаем функцию "а" и принимаем на вход произворльную перменную "х"
return x * 2; // возвращаем перменную "х" умноженную на 2
}
var a //создаем переменную "а" и не присваиваем ей никакогое значение
alert(a); //выводим "а", но "а" не имеет никакого значения, потому что к функции новая перменная никакого отношения не имеет, а значит по умолчанию будет "undefined"


//Пример №4
function b(x, y, a) { //создаем функцию "b", которая на вход принимает три произвольные переменные "х", "у" и "а";
arguments[2] = 10; //присваиваем элементу под номером 2 массива значение "10". Исходя из нумерации это будет третий элемент, потому что в массиве нумерация начинается с нуля;
alert(a); //выводим переменную "а" для которой переназначено любое входящее значение на "10" и видимо "10";
}
b(1, 2, 3); //вызываем функцию "b", в которую на вход передаем значения "1", "2" и "3".

//Пример №5
function a() {//создаем функцию "а" в которую на вход принимаем явным образом не заявленную переменную;
alert(this); // в соответствии со ссылкой "this" пробуем вывести объект, который инициирует алерт. Этим объектом является функция "а", но в нее не передали никакого значения, а значит по умолчанию будет undefined;
}
a.call(null); //функция "а" использует метод "call" с переменной "null". Получается, что в алерте мы увидим "null".